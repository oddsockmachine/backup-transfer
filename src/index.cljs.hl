
(page "index.html"
  (:require [app.rpc :as rpc]))


;; Cells for each input example.
(defc= random rpc/random-number)
(defc= ws-mdl rpc/ws-mdl)
(defc ws-select "")
(defc env-select "None")
(defc= workspaces (rpc/get-ws-from-env env-select))
(defc check-box false)

(rpc/init)
(html
  (head
    ; (link :href "https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.1/css/bulma.min.css" :rel "stylesheet" :type "text/css")
    (link :href "https://unpkg.com/purecss@1.0.0/build/pure-min.css" :rel "stylesheet" :type "text/css")
    (link :href "css/extra.css" :rel "stylesheet" :type "text/css")
    (title "Model Shop"))
  (body
    ; (h1 (text "1 = ~{random}"))
    ; (h1 (text "2 = ~{ws-mdl}"))

    (div :id "layout" :class "content pure-g"
        (div :id "nav" :class "pure-u"
            (a :href "#" :class "nav-menu-button" "Menu")

            (div :class "nav-inner"
                (button :class "primary-button pure-button" "Compose")

                (div :class "pure-menu"
                    (ul :class "pure-menu-list"
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" "Environments" (span :class "email-count" (str "  "(rand-int 10)))))
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" "Outbox" (span :class "email-count" (str "  "(rand-int 10)))))
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" "Spam" (span :class "email-count" (str "  "(rand-int 10)))))
                        (li :class "pure-menu-heading" "Labels")
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" (span :class "email-label-personal") "FOO"))
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" (span :class "email-label-work") "FOO"))
                        (li :class "pure-menu-item" (a :href "#" :class "pure-menu-link" (span :class "email-label-travel") "FOO"))
                      ))))


    (div :id "list" :class "pure-u-1"
    (for-tpl [env rpc/env-list]
        (div :class "email-item email-item-selected pure-g"
            (div :class "pure-u" :click #(reset! env-select @env)
                (img :width "64" :height "64" :alt  (str @env "'s face") :class "email-avatar" :src "/img/common/avatar.png")

                (div :class "pure-u-3-4"
                    (h5 :class "email-name" env)
                    ; (h4 :class "email-subject" env)
                    ; (p :class "email-desc" "Hey, I just wanted to check in with you from Toronto. I got here earlier today.")
                    (p :class "email-desc" "3 Workspaces (0 selected)")
                    (p :class "email-desc" "15 Models (0 selected)")
                )
            )

      )))





          (div :id "main" :class "pure-u-1"
              (div :class "email-content"
                  (div :class "email-content-header pure-g"
                      (div :class "pure-u-1-2"
                          (h1 :class "email-content-title"
                              "2 Workspaces and 6 Models selected")
                          (p :class "email-content-subtitle"
                              "From 2 different environments")
                      )

                      (div :class "email-content-controls pure-u-1-2"
                          (button :class "secondary-button pure-button" "Clear")
                          (button :class "secondary-button pure-button" "Bundle")
                          (button :class "secondary-button pure-button" "Transfer")
                      )
                  )

                  (div :class "email-content-body"

                      (h1 "Environment selected: " (b env-select))


                      (form :submit #(rpc/get-ws-from-env @env-select) ; edit and submit form to load record
                        ; (p (label "Workspace name: ")
                        ;     (input :value ws-select :keyup #(reset! ws-select @%)))
                        (p (button :type "submit" "Find Workspaces")))

                      ;    TODO REPLACE EXCLAIM W WS-MDLS
                      (form :submit #(rpc/do-exclaim @ws-select) ; edit and submit form to load record
                        (p (label "Workspace name: ")
                            (input :value ws-select :keyup #(reset! ws-select @%)))
                        (p (button :type "submit" "Search")))
                      (p (text "Workspaces: ~{rpc/stateE}"))

                      (ul (for-tpl [x rpc/ws-list]
                        (li x     (input
                              :type "checkbox"
                              :click #(do (swap! check-box not) true)
                              :value check-box))))


                      )))
                      )))



    ; (h1 "Choose Environment:")
    ; (select
    ;   :change #(reset! env-select @%)
    ;   :value env-select
    ;   (option :selected (cell= (= env-select nil)) :value nil "none")
    ;   (for-tpl [x rpc/env-list]
    ;     (option :selected (cell= (= env-select x)) :value x x)))
    ; (p "Environment selected: " (b env-select))
    ;
    ;
    ; (form :submit #(rpc/get-ws-from-env @env-select) ; edit and submit form to load record
    ;   ; (p (label "Workspace name: ")
    ;   ;     (input :value ws-select :keyup #(reset! ws-select @%)))
    ;   (p (button :type "submit" "Find Workspaces")))
    ;
    ; ;    TODO REPLACE EXCLAIM W WS-MDLS
    ; (form :submit #(rpc/do-exclaim @ws-select) ; edit and submit form to load record
    ;   (p (label "Workspace name: ")
    ;       (input :value ws-select :keyup #(reset! ws-select @%)))
    ;   (p (button :type "submit" "Search")))
    ; (p (text "Workspaces: ~{rpc/stateE}"))
    ;
    ; (ul (for-tpl [x rpc/ws-list]
    ;   (li x     (input
    ;         :type "checkbox"
    ;         :click #(do (swap! check-box not) true)
    ;         :value check-box))))


;
; ))
